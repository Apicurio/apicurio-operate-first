---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-server
spec:
  type: ClusterIP
  ports:
  - name: https 
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    statefulset: keycloak-server


---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-admin-user
type: Opaque
data:
  password: YV9iZXR0ZXJfcGFzc3dvcmRfdGhhbl90aGlz
  #password: a_better_password_than_this

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-server
spec:
  replicas: 1
  selector:
    matchLabels:
      statefulset: keycloak-server
  serviceName: keycloak-server
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        statefulset: keycloak-server
    spec:
      initContainers:
      - name: wait-for-postgresql
        image: alpine:3.7
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          until printf "." && nc -z -w 2 postgres-keycloak 5432; do
            sleep 2;
          done;
          echo 'PostgreSQL OK âœ“'
      containers:
      - name: keycloak
        image: jboss/keycloak:13.0.1
        env:
        - name: KEYCLOAK_USER
          value: keycloak
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: keycloak-admin-user
        - name: DB_VENDOR
          value: postgres
        - name: DB_ADDR
          value: postgres-keycloak
        - name: DB_PORT
          value: "5432"
        - name: POSTGRES_PORT
          value: "5432"
          #^ because of https://github.com/helm/charts/issues/9561
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: postgres-keycloak
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/
            port: http
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /auth/
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          privileged: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
  # - metadata:
  #     labels:
  #       app.kubernetes.io/part-of: keycloak
  #     name: data
  #   spec:
  #     accessModes:
  #     - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 1Gi
  #     storageClassName: standard
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: keycloak-server
spec:
  host: 'keycloak-server-apicurio-apicurio-registry.apps.zero.massopen.cloud'
  tls:
    termination: passthrough
  to:
    kind: Service
    name: keycloak-server
    weight: 100
  wildcardPolicy: None

  